rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Products can be read by anyone, but only modified by admins.
    // However, we allow a user to update the rating and reviews count.
    match /products/{productId} {
      allow read: if true;
      allow create, delete: if isUserAdmin();
      allow update: if isUserAdmin() || 
                      (isUserAuthenticated() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'reviews']));

      // Reviews can be created by any authenticated user.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isUserAuthenticated();
        allow update, delete: if isUserAdmin();
      }
    }

    // Categories can be read by anyone, but only modified by admins.
    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isUserAdmin();
    }
    
    // Promo codes can only be accessed by admins
    match /promoCodes/{codeId} {
        allow read, write: if isUserAdmin();
    }
    
    // Settings can only be modified by admins
    match /settings/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }

    // Users can only read/write their own document, unless they are an admin.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isUserAdmin();
    }
    
    // Orders can be read by the user who owns it, or by an admin.
    match /orders/{orderId} {
      allow read, write: if isUserAuthenticated() && (resource.data.userId == request.auth.uid || isUserAdmin());
      allow create: if isUserAuthenticated();
    }
  }
}
