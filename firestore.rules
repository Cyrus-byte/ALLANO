rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own data. Admins can do anything.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // Products can be read by anyone, but only modified by admins.
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
      
      // Reviews can be read by anyone.
      // Users can only add reviews, not modify/delete them.
      match /reviews/{reviewId} {
        allow get, list: if true;
        allow create: if request.auth != null;
        allow update, delete: if false; // Disallow updates/deletes for now
      }
    }

    // Categories can be read by anyone, but only modified by admins.
    match /categories/{categoryId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Promo codes can be read by any authenticated user, but only modified by admins.
    match /promoCodes/{promoCodeId} {
        allow get, list: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }

    // Orders can only be accessed by the user who created them or by an admin.
    match /orders/{orderId} {
      allow get: if request.auth.uid == resource.data.userId || isAdmin();
      // Allow creation for any authenticated user.
      allow create: if request.auth != null;
      // Allow status updates by admins (for shipping, etc.)
      allow update: if isAdmin();
    }

    // Settings can only be read/written by admins.
    match /settings/{docId} {
        allow get, list, create, update, delete: if isAdmin();
    }
  }
}
