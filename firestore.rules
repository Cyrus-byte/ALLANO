
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /products/{productId}/{reviews}/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /promoCodes/{promoCodeId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }

    match /settings/{settingId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read, update, write: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    match /orders/{orderId} {
      allow read, create: if request.auth.uid == resource.data.userId || isAdmin();
      // This rule allows a user to query their own orders.
      allow list: if request.auth.uid == request.query.where.userId || isAdmin();
      allow update: if isAdmin();
    }
  }
}
