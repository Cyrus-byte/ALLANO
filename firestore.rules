rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Products can be read by anyone. Only admins should write.
    // We allow updates only on rating and reviews fields for review transactions.
    match /products/{productId} {
      allow read: if true;
      allow create, delete: if false; // Should be handled by admin SDK
      allow update: if request.auth != null 
                    && request.resource.data.keys().hasOnly(['rating', 'reviews'])
                    && request.resource.data.rating is number
                    && request.resource.data.reviews is number;
      
      // Reviews can be read by anyone
      match /reviews/{reviewId} {
        allow read: if true;
        // Only authenticated users can create their own reviews
        allow create: if request.auth != null
                      && request.resource.data.userId == request.auth.uid;
        // Users can't update or delete reviews for now to keep it simple
        allow update, delete: if false;
      }
    }

    // Users can only read and write their own documents (e.g., cart, wishlist).
    match /users/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }

    // Orders can be created by authenticated users for themselves.
    // Reading/updating status should be handled by a backend/admin role.
    match /orders/{orderId} {
        allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || resource.data.userId == request.auth.uid;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
