
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] == true;
    }

    function isAdmin() {
      return isSignedIn() && getRole('admin');
    }

    // USERS
    // - A user can only access their own document.
    // - Anyone can create a user document (on signup).
    match /users/{userId} {
      allow read, update: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }

    // PRODUCTS & REVIEWS
    // - Anyone can read products and reviews.
    // - Only admins can write to products.
    // - Only signed-in users can write reviews.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();

      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn();
        // Allow no updates/deletes for now for simplicity
        allow update, delete: if false;
      }
    }

    // CATEGORIES & SETTINGS
    // - Anyone can read categories and settings.
    // - Only admins can write to them.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/{settingId} {
       allow read: if true;
       allow write: if isAdmin();
    }

    // ORDERS
    // - A user can only access their own orders.
    // - Orders are created through a backend function implicitly.
    match /orders/{orderId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create, update, delete: if isAdmin(); // Only admins can manage orders post-creation
    }
  }
}
