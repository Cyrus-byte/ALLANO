
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    
    // USERS: Can only read/write their own document
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if isSignedIn();
    }
    
    // PRODUCTS: Public can read, Admins can write
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
      
      // REVIEWS: Signed in users can create, everyone can read
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if false; // Or check ownership/admin status
      }
    }
    
    // ORDERS: Users can only read their own orders
    match /orders/{orderId} {
      allow read, create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Orders should generally be immutable
    }

    // CATEGORIES: Public can read, Admins can write
    match /categories/{categoryId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    // SETTINGS: Public can read, Admins can write
    match /settings/{settingId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
  }
}
